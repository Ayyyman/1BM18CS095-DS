/* File Copy   Operation *

#include<fcntl.h>
#include<sys/stat.h>
 #define BUFSIZE 1024
 int main(void)
{
    int fd1,fd2,n; 
    char buf[BUFSIZ];
    fd1=open(“/etc/passwd”, O_RDONLY);
     fd2=open(“passwd.bak”,O_WRONLY |O_CREAT|O_TRUNC, S_IRUSR|S_IWUSR|S_IRGRP| S_IWGRP|S_IROTH);   /*Mode 664  */
 while((n=read(fd1,buf,BUFSIZE))>0)
       write(fd2,buf,n);
 close(fd1);
close(fd2);
 exit(0);
}




Write a shell script that accepts 2 file names as arguments sorts both to temporary files merges the sorted files to the standard output and finally deletes the temporary files.

#!/bin/sh
if [ $# -ne 2 ]
then
echo “Error in number of arguments”
exit 1
fi
sort $1 > temp
sort $2 > temp1
sort –m temp temp1
rm temp temp1

Output:

$sh sort.sh temp temp1

Abhay
Barthy
Dinesh
Jai shree
Kishore
Oasis
Suresh




#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <stdlib.h>

int main(int argc, char *argv[])
 {
   int f1, f2;
   char buff[50];
   long int n;

 if(((f1 = open(argv[1], O_RDONLY)) == -1 || ((f2=open(argv[2], O_CREAT | 
 O_WRONLY | O_TRUNC, 0700))== 1)))
    {
       perror("problem in file");
       exit(1);
    }

 while((n=read(f1, buff, 50))>0)

     if(write(f2, buff, n)!=n)
        {
           perror("problem in writing");
           exit(3);
        }

     if(n==-1)
        {
           perror("problem in reading");
           exit(2);
        }

       close(f2);
       exit(0);
 }
